"""migrations

Revision ID: 403e905e05fc
Revises: 40e800f89180
Create Date: 2024-08-09 04:15:38.554560

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "403e905e05fc"
down_revision: Union[str, None] = "40e800f89180"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("messages")
    op.drop_table("likes")
    op.drop_table("chats")
    op.drop_column("albums", "prod_by")
    op.drop_column("beats", "view_count")
    op.drop_column("beats", "prod_by")
    op.drop_column("users", "is_active")
    op.drop_column("users", "registered_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "registered_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "beats",
        sa.Column("prod_by", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "beats",
        sa.Column(
            "view_count", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "albums",
        sa.Column("prod_by", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_table(
        "chats",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "is_available", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="chats_pkey"),
    )
    op.create_table(
        "likes",
        sa.Column(
            "beat_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "is_available", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["beat_id"], ["beats.id"], name="likes_beat_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="likes_pkey"),
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "is_available", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="messages_pkey"),
    )
    # ### end Alembic commands ###
