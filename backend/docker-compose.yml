version: '3.8'

services:
  db:
    container_name: my_db
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - ${DB_PORT}:5432
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  db_test:
    container_name: my_db_test
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME_TEST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - ${DB_PORT_TEST}:5432
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: my_app
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: ['sh', '/app/app.sh']
    ports:
      - 8000:8000
    restart: always
    env_file:
      - .env
